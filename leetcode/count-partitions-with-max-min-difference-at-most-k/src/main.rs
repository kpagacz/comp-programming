// https://leetcode.com/problems/count-partitions-with-max-min-difference-at-most-k/description/
pub struct Solution;

impl Solution {
    pub fn count_partitions(nums: Vec<i32>, k: i32) -> i32 {
        const MOD: i64 = 10i64.pow(9) + 7;
        use std::collections::VecDeque;
        let mut minq = VecDeque::new();
        let mut maxq = VecDeque::new();
        let mut acc = 1;
        let mut dp = vec![0; nums.len() + 1];
        dp[0] = 1; // this is unclear to me why
        let mut left = 0usize;
        for right in 0..nums.len() {
            while !minq.is_empty() && nums[*minq.back().unwrap()] > nums[right] {
                minq.pop_back();
            }
            minq.push_back(right);
            while !maxq.is_empty() && nums[*maxq.back().unwrap()] < nums[right] {
                maxq.pop_back();
            }
            maxq.push_back(right);

            while nums[maxq[0]] - nums[minq[0]] > k {
                acc = (MOD + acc - dp[left]) % MOD;
                left += 1;
                if maxq[0] < left {
                    maxq.pop_front();
                }
                if minq[0] < left {
                    minq.pop_front();
                }
            }

            dp[right + 1] = acc;
            acc = (acc << 1) % MOD;
        }
        dp[nums.len()] as _
    }

    pub fn count_partitions_old(nums: Vec<i32>, k: i32) -> i32 {
        use std::collections::BTreeMap;
        const MOD: i64 = 10i64.pow(9) + 7;
        let mut prefix = vec![0i64; nums.len() + 2];
        prefix[1] = 1;
        let mut left = 1usize;

        fn add_to_map(map: &mut BTreeMap<i32, i32>, num: i32) {
            map.entry(num).and_modify(|entry| *entry += 1).or_insert(1);
        }
        fn remove_from_map(map: &mut BTreeMap<i32, i32>, num: i32) {
            let entry = map.entry(num).or_insert(1);
            *entry -= 1;
            if *entry == 0 {
                map.remove(&num);
            }
        }
        fn is_map_ok(map: &BTreeMap<i32, i32>, max_diff: i32) -> bool {
            let first = *map.first_key_value().unwrap().0;
            let last = *map.last_key_value().unwrap().0;
            last - first <= max_diff
        }
        let mut map = BTreeMap::new();
        for i in 0..nums.len() {
            add_to_map(&mut map, nums[i]);
            while !is_map_ok(&map, k) {
                remove_from_map(&mut map, nums[left - 1]);
                left += 1;
            }
            let count = prefix[i + 1] - prefix[left - 1];
            prefix[i + 2] = prefix[i + 1] + count;
            prefix[i + 2] %= MOD;
        }

        ((MOD + prefix[nums.len() + 1] - prefix[nums.len()]) % MOD) as _
    }
}

fn main() {
    let test_cases = [
        (vec![9, 4, 1, 3, 7], 4, 6),
        (vec![3, 3, 4], 0, 2),
        (
            vec![
                3, 3, 4, 10000000, 20000000, 1, 73941, 12309, 192384, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4,
                4, 41, 1, 1, 1, 1, 323,
            ],
            1000000000,
            33554432,
        ),
        (
            vec![
                799611153, 285979515, 228989476, 797435401, 456722229, 578979532, 665305786,
                364991414, 971540417, 214778148, 310982814, 785754831, 181650964, 113398495,
                272596827, 292793653, 142616470, 41426963, 760190408, 207771027, 928706086,
                111162958, 970891722, 141964326, 477669430, 602352837, 524349715, 150961456,
                388874871, 993600498, 614835475, 846195354, 318166230, 737859065, 857864941,
                452044416, 995862880, 997754967, 748622115, 917985075, 642893610, 650910440,
                794677696, 632842572, 341494375, 252526222, 242120359, 479352757, 734206288,
                564680322, 798878349, 872627880, 499397934, 344115678, 583980548, 779425962,
                234522145, 527330051, 739806604, 937752914, 410187347, 632556813, 640264288,
                543658156, 35865519, 889833557, 694410481, 624014914, 909646051, 140970192,
                448059013, 476026119, 436033233, 332962441, 283863350, 173908414, 329007227,
                526054869, 67786339, 261556771, 344387949, 196449127, 247222173, 976960224,
                701368875, 459723074, 803226072, 122591348, 603218392, 848089519, 173598800,
                312454504, 435181061, 275653906, 127019056, 523288708, 580831967, 45070122,
                410915852, 235026361, 155006108, 620887126, 566962432, 562945322, 969621383,
                72265347, 679367331, 963398676, 767775847, 996608829, 407246581, 361153159,
                898319606, 528344098, 291431448, 509252856, 880813418, 284848807, 17708043,
                985404876, 156732940, 891013834, 709945873, 573047460, 852084795, 93848836,
                586742404, 402050140, 586424210, 723847969, 427015856, 948890451, 280754733,
                639465129, 865149732, 176688791, 736312403, 365882283, 448773272, 77801674,
                647482439, 705659012, 988916046, 140150513, 871845401, 707769738, 375740398,
                469163039, 601314004, 220880700, 803490882, 926371817, 724797484, 173505196,
                867331050, 43064404, 754092921, 482601198, 971291914, 774881747, 252350212,
                682584530, 155720695, 981713520, 573108331, 194049962, 917240360, 922050531,
                124291839, 958595997, 975701313, 273779703, 567728840, 646194164, 89016947,
                831482998, 292373413, 399239128, 539823887, 140035561, 488317646, 352468074,
                614609672, 244056393, 424735914, 909404551, 688545721, 471560428, 766470830,
                528679547, 960793961, 264653048, 771210675, 202416125, 955993605, 807294538,
                145944026, 337781044, 396586237, 644353596, 76427587, 545014967, 869093640,
                820825648, 201242899, 87434919, 267352277, 682736423, 534411786, 808582328,
                950416800, 351871761, 689549476, 287457695, 371810691, 722917331, 656412275,
                820853965, 997664566, 434731187, 70637335, 327651083, 32751025, 731463365,
                102625455, 287035814, 646333333, 637027065, 974571264, 287018433, 801787906,
                989732032, 204955082, 754775020, 514735696, 889169538, 114554671, 476138015,
                431377861, 846431805, 993299743, 533429811, 441558606, 237399212, 380594509,
                464793679, 313922263, 42584863, 210615011, 939961797, 433513771, 942418591,
                579585301, 833294786, 592784185, 784083494, 171582229, 233065924, 87260371,
                680161908, 981025503, 940513111, 254269913, 551558716, 430081709, 981867643,
                205999129, 58451396, 127037925, 566568066, 709419416, 282437983, 274287650,
                490644100, 562376533, 958908273, 363120130, 900333877, 359355201, 892847247,
                361196816, 5676622, 198155300, 865674515, 18541672, 233586681, 2166518, 534524898,
                493788743, 21803990, 860014654, 298894724, 611405004, 105306341, 520958361,
                449458002, 460813204, 968853092, 358099598, 920630745, 81816186, 783347778,
                563995055, 937349279, 257976144, 327085659, 559117447, 817378624, 889362243,
                7023087, 14707660, 758478354, 461055967, 721169201, 103755246, 583664238,
                249332880, 72081320, 438661824, 207738223, 803821707, 783381928, 596869097,
                937950991, 185442682, 987812769, 257173654, 819686024, 360505949, 634269428,
                42958548, 328573779, 751959448, 138912890, 472341573, 388492363, 847409003,
                630794674, 684574013, 648797476, 320473145, 151507952, 76355483, 948299590,
                584651480, 696877210, 776298887, 699039152, 522260247, 750935161, 38018051,
                949112633, 57191784, 482826048, 216405041, 757363416, 250946169, 152105843,
                360519728, 813978947, 835780490, 363656169, 468707836, 333179000, 959913869,
                43520187, 760624950, 792536760, 608288943, 558926659, 658365424, 710323578,
                828205622, 110268914, 356412464, 96132366, 370993567, 756575304, 135824864,
                239580196, 343956966, 505824909, 354962098, 547251356, 270282983, 171247902,
                336081497, 672935719, 309570759, 267466098, 543297014, 506692070, 538372407,
                264300802, 209327699, 370732466, 316330157, 574451975, 705683874, 926367292,
                9740432, 870807673, 739791114, 921777166, 532072199, 277093447, 361017060,
                256552142, 197787953, 207555552, 131751013, 732009670, 444943831, 849596533,
                306101071, 114594828, 991990191, 151220189, 846187455, 157002311, 968082545,
                250475771, 809660712, 948550996, 134503385, 938391887, 274740001, 434574856,
                619093629, 311540051, 523826427, 552592089, 228643195, 881014513, 22549325,
                281058866, 355348238, 715024330, 224792869, 609192755, 430309989, 870320168,
                568314004, 923953479, 465454528, 117941257, 851619796, 609678731, 921276461,
                951512774, 243884505, 194489807, 690660871, 472835731, 653561496, 470942011,
                831437415, 684263390, 191376332, 728768513, 96881902, 631976978, 988747935,
                628031610, 672609398, 681688435, 824706756, 884234177, 744187688, 934594671,
                653878006, 516131117, 816757173, 830412282, 286645867, 216739058, 469086503,
                396436975, 72794513, 882703606, 390596313, 345807138, 340699711, 847910369,
                45563412, 925501176, 199678400, 321150870, 934663379, 52928725, 105841529,
                168713985, 70217806, 303095515, 949983484, 737271225, 459317038, 196651959,
                995555961, 991908059, 140657476, 819736803, 945922701, 476742788, 93069383,
                849880807, 420772372, 545434998, 439460622, 831748485, 317825339, 850395199,
                390441382, 329617711, 392680331, 763324051, 368488278, 277572011, 224113033,
                235704798, 201823517, 899427375, 824865646, 786234447, 933508244, 122743572,
                775392573, 442133778, 591691978, 892177719, 754770232, 660574687, 49315377,
                903620372, 176878044, 813790669, 969690250, 690781750, 1891664, 663649353,
                358876152, 768517132, 883014016, 965644216, 613381782, 603005031, 287407816,
                991462992, 178294045, 519089204, 683169090, 271060291, 455835875, 136313239,
                821215597, 586272727, 883743515, 390127918, 198856633, 220287595, 837423933,
                232023116, 185525551, 881663791, 875381621, 208320263, 88085909, 342288478,
                126422654, 66844551, 151136857, 737338337, 86808269, 722626997, 751218942,
                595818775, 434126746, 900270252, 746432230,
            ],
            29438734,
            67108864,
        ),
    ];
    for (nums, k, expected) in test_cases {
        println!("{} | exp {expected}", Solution::count_partitions(nums, k));
    }
}
